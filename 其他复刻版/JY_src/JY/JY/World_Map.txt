
			当角色在(x,y)时，该显示哪些地图图块？在何处显示？

图块为菱形，高为a，宽为b。
如果要基点图块的顶部中央在屏幕正中，则要求其上方图块比下方多1（自己在下方），左右图块数相等。上与下、左与右被裁减掉的部分相等。
设屏幕宽高分别为Width, Height。
设基点图块上方图块数为m，下方图块数为m-1，左右图块数为n。

建议以下部分参照菱形网格图片来看。

对于宽度，设需要h个图块，则
	p = Width/2b的余数
如果p>b或p=0，边缘图块和基点图块在屏幕上处于同一水平线，且
	同水平h = 向上取整[Width/2b] *2 +1
	错开h = 向上取整[Width/2b] *2
	h = 向上取整[Width/2b] *2 +1（计算左右行时按水平算）
	2n+1 = h
	n = (h -1)/2 = 向上取整[Width/2b]
否则边缘图块和基点图块错开，且
	同水平h = 向上取整[Width/2b] *2 -1
	错开h = 向上取整[Width/2b] *2
	h = 向上取整[Width/2b] *2（计算左右行时按错开算）
	2n+1 = h-1
	n = (h-2)/2 = 向上取整[Width/2b] -1（外加错开一格）

对于高度，设需要v个图块，同理
	q = Height/2a的余数
如果q>a或q=0，边缘图块和基点图块在屏幕上错开，且
	同垂直线v = 向上取整[Height/2a] *2
	错开v = 向上取整[Height/2a] *2 +1
	v = 向上取整[Height/2a] *2 +1 （计算上下行时要错开算）
	2m+1 = v
	m = (v -1)/2 = 向上取整[Height/2a]（外加错开一格）
否则边缘图块和基点图块同垂直线，且
	同垂直线v = 向上取整[Height/2a] *2
	错开v = 向上取整[Height/2a] *2 -1
	v = 向上取整[Height/2a] *2 （计算上下行时按垂线算）
	2m = v
	m = v/2 = 向上取整[Height/2a]

设基点图块（中央偏下）的地图坐标为(x,y)，其底部中央的屏幕坐标为(Width/2, Height/2 + a -1)。

屏幕上同一水平线上的菱形图块，地图坐标从左到右依次为(x, y), (x+1, y-1), (x+2, y-2)...
屏幕上同一垂直线上的菱形图块，地图坐标从上到下依次为(x, y), (x+1, y+1), (x+2, y+2)...
水平向右移动一个图块位置，地图坐标变动为(+1, -1)，向左(-1, +1)
垂直向下移动一个图块位置，地图坐标变动为(+1, +1)，向上(-1, -1)
向右上移动一个图块位置，地图坐标变动为(0, -1)，左下(0, +1)，左上(-1, 0)，右下(+1, 0)
------------

水平垂直都错开时，四个角的坐标为

上->右上	(x-m, y-m-1)
下->右下	(x+m, y+m-1)
右->右上	(x+n, y-n-1)
左->左上	(x-n-1, y+n)

高度为2m+1，宽度为2n+2

宽度为偶数，则“上->右上”再向右平移(2n+2)/2 -1个位置就到右上角了。
高度为奇数，则“右->右上”再向下平移(2m+1 -1)/2个位置就到右下角了。

结果为
右上	(x-m+n, y-m-n-1)
左上	(x-m-n-1, y-m+n)
右下	(x+m+n, y+m-n-1)
左下	(x+m-n-1, y+m+n)
------------

水平、垂直都不错开时，四个角的坐标为

上	(x-m, y-m)
下	(x+m, y+m)
左	(x-n, y+n)
右	(x+n, y-n)

高度为2m+1，宽度为2n+1

右上	(x-m+n, y-m-n)
左上	(x-m-n, y-m+n)
右下	(x+m+n-1, y+m-n-1)
左下	(x+m-n-1, y+m+n-1)
------------

水平错开、垂直不错开时，四个角的坐标为（角不能合为一点，所以有8个点，绘制时换线时还要换点）

上	(x-m, y-m)
下	(x+m-1, y+m-1)
右->右上(x+n, y-n-1)
左->左上(x-n-1, y+n)

宽度为2n+2（由于缺角边缘宽度为2n+1），高度为2m（由于缺角边缘高度为2m-1）

上右	(x-m+n, y-m-n)
上左	(x-m-n, y-m+n)
下右	(x+m+n-1, y+m-n-1)
下左	(x+m-n-1, y+m+n-1)
右上	(x-m+n+1, y-m-n)
右下	(x+m+n-1, y+m-n-2)
左上	(x-m-n, y-m+n+1)
左下	(x+m-n-2, y+m+n-1)
------------

水平不错开、垂直错开时，四个角的坐标为（角不能合为一点，所以有8个点，绘制时换线时还要换点）

上->右上(x-m, y-m-1)
下->右下(x+m, y+m-1)
右	(x+n, y-n)
左	(x-n, y+n)

宽度为2n+1（由于缺角边缘宽度为2n），高度为2m+1（由于缺角边缘高度为2m）

上右	(x-m+n-1, y-m-n)
上左	(x-m-n, y-m+n-1)
下右	(x+m+n-1, y+m-n)
下左	(x+m-n, y+m+n-1)
右上	(x-m+n, y-m-n)
右下	(x+m+n-1, y+m-n-1)
左上	(x-m-n, y-m+n)
左下	(x+m-n-1, y+m+n-1)
------------

图块绘制是从地图坐标上y轴最小的一行开始画，一行中先画x轴小的。在屏幕上表现为最先画右上角，最后画左下角。

从屏幕上行最右，到右行最上，绘制地图坐标里y轴相同的一行；
上行坐标向左一步，右行向下一步，绘制地图坐标里y轴相同的一行；
	若上行先走完，则起点行改为左行（从最上开始）；右行走完后，终点行改为下行（从最右开始）；
	若右行先走完，则终点行改为下行（从最右开始）；上行走完后，起点行改为左行（从最上开始）；
最后绘制终止于从左行最下到下行最左。

把图块坐标转换为屏幕坐标：
图块坐标x轴加1，则屏幕坐标移动(b/2 , a/2)；图块坐标y轴加1，则屏幕坐标移动(-b/2 , a/2)。
基点图块(x,y)底部中央的屏幕坐标为(Width/2, Height/2 +a -1)，则图块(X,Y)的屏幕坐标变动为
	((X-x)*b/2 - (Y-y)*b/2, (X-x)*a/2 + (Y-y)*a/2)
即
	((dx - dy)*b/2, (dx + dy)*a/2)

最终，图块(X,Y)底部中央的屏幕坐标为（由相对中央图块的偏移值求得屏幕坐标）
	( Width/2 + (dx - dy)*b/2, Height/2 -1 + (dx + dy +2)*a/2 )


步骤总结：
1、计算出四个角的地图坐标偏移值；
2、根据四个角的地图坐标算出每一个地图坐标偏移值，得到地图坐标，再得到该坐标处的图像编号；
3、把地图坐标偏移值转换成屏幕坐标，连同图像编号交给显示函数。
------------------------------------------------------------------------------------------------

图块之间是有重合的。如图Tilex1.png, Tilex4.png。
但是，只要按图块的规格(36x18)去画，可以完全不用管重合的情况，只要绘制的先后顺序正确就行。
------------

根据图像偏移得出的图像原点：头像在左下角，地图图块在下方中央。
------------

建筑之间的遮盖还无法解决。-> 正确的绘制顺序应该是从左到右（或从右到左）、从上到下。
而且建筑等大物体的基点必须在底面菱形的正中心，这样才能保证它遮不到前面的物体，也不会被后面的物体遮住。即把建筑当成一张薄纸。
这个方法在纯图块的地图上实现起来有点难。

如果用屏幕视角先远后近的方法绘制，非菱形建筑（比如2x3）如何实现遮盖？
按屏幕坐标从左到右，从上到下的方法无法解决这个问题，只有回到按地图坐标来的老办法了。
------------

经测试，90%的时间都用在了Blt()上。果然只能一次合并完9个屏幕，然后整块整块的变换。
------------------------------------------------------------------------------------------------

			1+8显示画面法

根据屏幕宽高把地图分成一个个菱形块，每次把人物所在块连同周围8个块读入显存。人物走动时根据位置去掉最远的几个块，载入较近的几个还没载入的块。屏幕上只显示9个块中出现在屏幕上的区域。
------------

图块为菱形，高为a，宽为b。
如果要基点图块的顶部中央在屏幕正中，则要求其上方图块比下方多1（自己在下方），左右图块数相等。上与下、左与右被裁减掉的部分相等。
设屏幕宽高分别为Width, Height。
地图块为菱形，高为n*a，宽为n*b。

要在地图块中放下屏幕，需要地图块的n为多少？

对于内接矩形，有
	Width/2 : (n*a - Height)/2 = b : a
即
	n = (Width * a + Height * b) / (a * b)

如果要保证中心点不偏移，则如果n有小数，则n要加2（菱形向外扩展了一圈）。
实际上任何长宽比的矩形都能够与菱形内接，即只要给定了矩形的宽高，n即为该矩形内接于该菱形时的图块数。
------------

当前坐标为(x,y)，则所在的n*n的菱形块的起始顶点为：
	( (x/n)*n, (y/n)*n )
终止顶点的横纵坐标都加n。

1 2 3
4 5 6
7 8 9

设中间一个的顶点坐标为(x5, y5)，则其他8个地图块的起始顶点为：
1	(x5 -n, y5 -n)
2	(x5   , y5 -n)
3	(x5 +n, y5 -n)
4	(x5 -n, y5   )
5	(x5   , y5   )
6	(x5 +n, y5   )
7	(x5 -n, y5 +n)
8	(x5   , y5 +n)
9	(x5 +n, y5 +n)
------------

	何时更换地图块？

中心点移到当前地图块以外时。
以中心点所在地图块为中央地图块，找到新9个地图块的位置，释放不包括在新地图块中的，创建还没创建的。
------------

	如何变换地图块到屏幕？

一次最多需要变换4个地图块。分别变换时边缘也会有覆盖，所以也要遵从顺序。
变换地图块到屏幕是在屏幕坐标系下进行的。
屏幕中心在基点图块上顶点。
屏幕中心到上下、左右的距离：Height/2, Width/2。

首先求中心点在本地图块的位置（点阵坐标），更换地图块的动作保证中心点一定在本地图块以内。

已知地图块上顶点地图坐标为(x5 ,y5)，人物地图坐标为(x, y)。
根据上面得出的结论：点阵坐标偏移为 ((dx - dy)*b/2, (dx + dy)*a/2)
中心点相对上顶点的偏移为
	( ((x-x5) - (y-y5))*b/2, ((x-x5) + (y-y5))*a/2 )
即，中心点相对地图块左上角的偏移为
	( ((x-x5) - (y-y5) +n)*b/2, ((x-x5) + (y-y5))*a/2 )

设以上位置为(x0, y0)，则屏幕区域为
左上	(x0 - Width/2, y0 - Height/2)
右上	(x0 + Width/2, y0 - Height/2)
左下	(x0 - Width/2, y0 + Height/2)
右下	(x0 + Width/2, y0 + Height/2)

或者如此描述
上边	x0 - Width/2
下边	x0 + Width/2
左边	y0 - Height/2
右边	y0 + Height/2

以上四个顶点（或者边）的位置与图块坐标最大最小值的关系、以及是否在菱形内部，决定了要变换的地图块及变换的位置。

上边小于0，且左右分别在上顶点两侧，则要变换的地图块为1,4,2,5。
...
（用这种方法的话，还要判断点与边的关系。）

最直接的方法是每个地图块都算出屏幕区域，然后变换在地图块上且不为透明的最小区域到屏幕。
变换到屏幕的位置用该区域到中心点的位置来计算得到。
------------

Diablo II的做法是：屏幕宽高为24x, 16x，整个读取的画面为菱形，宽高为120x, 60x。屏幕面积约占总面积的1/18。
以上数据刚好符合现在的方法。

如果1+8载入的是矩形而不是菱形，那么所用内存会大约小一半。
用菱形可以用快速变换不用剪切，现在就必须用了。
用矩形是最符合行走习惯的，即斜方向（游戏者一般行走方向）位置多些，载入地图频率较低。
矩形地图块要判断中心点是否在其中比菱形简单，合并图像时浪费的资源（透明部分）完全没有。
矩形地图块的划分比较麻烦。既然这样，那么就不事先划分好，根据中心初始地图坐标来载入好了。
------------------------------------------------------------------------------------------------
------------
------------
------------
------------
------------