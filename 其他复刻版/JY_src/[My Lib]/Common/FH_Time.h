//-----------------------------------------------------------------------------
// 时间相关操作
//-----------------------------------------------------------------------------

#ifndef FH_TIME
#define FH_TIME

// INCLUDES ///////////////////////////////////////////////////////////////////

#define WIN32_LEAN_AND_MEAN

#include <windows.h>
#include <stdio.h>
#include <assert.h>

// DEFINES ////////////////////////////////////////////////////////////////////
// MACROS /////////////////////////////////////////////////////////////////////
// TYPES //////////////////////////////////////////////////////////////////////
// CLASS //////////////////////////////////////////////////////////////////////
// PROTOTYPES /////////////////////////////////////////////////////////////////

inline void StartTimer(LONGLONG *pnCpuCount);
inline void StopTimer(LONGLONG *pnCpuCount);

// EXTERNALS //////////////////////////////////////////////////////////////////
// GLOBALS ////////////////////////////////////////////////////////////////////
// FUNCTIONS //////////////////////////////////////////////////////////////////

//-----------------------------------------------------------------------------
// Name: StartTimer()
// Desc: 开始计时，当前时间储存在传入的地址中
//-----------------------------------------------------------------------------
inline void StartTimer(LONGLONG * const pnCpuCount)
	{
	LARGE_INTEGER Counter;
	QueryPerformanceCounter(&Counter);
	*pnCpuCount = Counter.QuadPart;
	}



//-----------------------------------------------------------------------------
// Name: StopTimer()
// Desc: 结束计时，从开始计时所经过时间储存在传入的地址中
//-----------------------------------------------------------------------------
inline void StopTimer(LONGLONG * const pnCpuCount)
	{
	LARGE_INTEGER Counter;
	QueryPerformanceCounter(&Counter);
	*pnCpuCount = Counter.QuadPart - *pnCpuCount;
	}


#endif // FH_TIME